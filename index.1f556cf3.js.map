{"mappings":"msBAAA,IAAAA,EAAAC,EAAA,S,aAEA,MAAMC,EAAiB,IAAI,EAAAF,EAAAG,SAErBC,EAAkBC,SAASC,cAAc,gBACzCC,EAAiBF,SAASC,cAAc,oBAC9CE,QAAQC,IAAIL,GACL,MAAMM,EAAWL,SAASC,cAAc,mBACzCK,EAAWN,SAASC,cAAc,0BA4EjC,SAASM,IAEdF,EAASG,UAAUC,OAAO,WAC1BJ,EAASG,UAAUE,IAAI,aA9EzBP,QAAQC,IAAIE,GAGZP,EAAgBY,iBAAiB,SAGjCC,eAA4BC,GAE1B,MACMC,EADYD,EAAME,OAAOC,QAAQ,eACbC,QAAQC,QAClCf,QAAQC,IAAIU,GACZ,MAAMK,QAAiBtB,EAAeuB,aAAaN,GACnDX,QAAQC,IAAIe,GACZjB,EAAemB,UAUjB,SAAqBF,GA0CnB,MAzCe,6EAEZA,EAASG,8FAGqBH,EAASI,oNAKMJ,EAASK,uEACXL,EAASM,4KAKNN,EAASO,gKAK5CP,EAASI,gJAKmBJ,EAASQ,OACpCC,KAAIC,GAASA,EAAMC,OAAMC,MAAM,EAAG,GAAGC,KAAK,yMAM1Bb,EAASc,gIAEgCd,EAASe,0GACbf,EAASe,+EA/ClDC,CAAYhB,GAyDvCd,EAASG,UAAUE,IAAI,WACvBL,EAASG,UAAUC,OAAO,aAvDVT,SAASC,cAAc,qBACjCU,iBAAiB,QAASyB,GACtBpC,SAASC,cAAc,iBAC/BU,iBAAiB,QAAS0B,IAC5B,EAAAC,EAAAxC,SAA8BqB,MAhBhCb,EAASK,iBAAiB,QAASJ,GAwFnC,SAAS6B,EAAsBvB,GAC7B,MAAM0B,EAAgB1B,EAAME,OACtBD,EAAUD,EAAME,OAAOE,QAAQC,QACrCf,QAAQC,IAAIU,GAEZ,MAAM0B,EAAgBC,aAAaC,QAAQ,iBACrCC,EAAqBC,KAAKC,MAAML,IAAkB,GACxDrC,QAAQC,IAAIuC,GACRA,EAAmBG,SAAShC,IAC9B6B,EAAmBI,OAAOJ,EAAmBK,QAAQlC,GAAU,GAC/DyB,EAAcU,UAjBY,mBAoB1BN,EAAmBO,KAAKpC,GACxByB,EAAcU,UApBe,uBAsB/BR,aAAaU,QAAQ,gBAAiBP,KAAKQ,UAAUT,IACrDxC,QAAQC,IAAIuC,GAId,SAASN,EAAkBxB,GACzB,MAAMwC,EAAexC,EAAME,OACrBD,EAAUD,EAAME,OAAOE,QAAQC,QAC/BoC,EAAeb,aAAaC,QAAQ,gBACpCa,EAAoBX,KAAKC,MAAMS,IAAiB,GAElDC,EAAkBT,SAAShC,IAC7ByC,EAAkBR,OAAOQ,EAAkBP,QAAQlC,GAAU,GAC7DuC,EAAaJ,UAlCY,iBAoCzBM,EAAkBL,KAAKpC,GACvBuC,EAAaJ,UApCc,qBAsC7BR,aAAaU,QAAQ,eAAgBP,KAAKQ,UAAUG,IACpDpD,QAAQC,IAAImD,O,gFCxId,IAAIC,EAAe,GAEJ,SAAAC,EAAuCC,GAE/B1D,SAASC,cAAc,qBAE/BU,iBAAiB,SAEhC,SAA2BgD,GACvB,IACIH,EAAe,IAAIZ,KAAKC,MAAMJ,aAAaC,QAAQ,aACrD,MAAOkB,GACLJ,EAAe,GAGnB,IAAK,MAAMK,KAAQL,EACf,GAAIE,EAASxB,KAAO2B,EAAK3B,GAAI,CACzB,MAAM4B,EAAeN,EAAaO,QAAOC,GAAQA,EAAK9B,KAAOwB,EAASxB,KAGtE,OAFAsB,EAAe,IAAIM,QACnBrB,aAAaU,QAAQ,UAAWP,KAAKQ,UAAUI,IAIvDA,EAAaN,KAAKQ,GAClBjB,aAAaU,QAAQ,UAAWP,KAAKQ,UAAUI,W","sources":["src/js/modal.js","src/js/local-storage.js"],"sourcesContent":["import NewsApiServise from './/api-service';\nimport addWatchedFilmToLocaleStorage from './local-storage';\nconst newsApiServise = new NewsApiServise();\n\nconst moviesContainer = document.querySelector('.movies-home');\nconst modalContainer = document.querySelector('.modal-conteiner');\nconsole.log(moviesContainer);\nexport const backdrop = document.querySelector('.backdrop-movie');\nconst closeBtn = document.querySelector('.modal-close-btn.close');\nconsole.log(closeBtn);\n\n\nmoviesContainer.addEventListener('click', onMovieClick);\ncloseBtn.addEventListener('click', onCloseModal);\n\nasync function onMovieClick(event) {\n  // event.preventDefault()\n  const movieCard = event.target.closest('.movie-card');\n  const movieId = movieCard.dataset.movieid;\n  console.log(movieId);\n  const response = await newsApiServise.getMovieInfo(movieId);\n  console.log(response);\n  modalContainer.innerHTML = renderMovie(response);\n  openModal();\n\n  const watched = document.querySelector('.card-btn-watched');\nwatched.addEventListener('click', onLocalStorageWatched);\nconst que = document.querySelector('.card-btn-que');\nque.addEventListener('click', onLocalStorageQue);\n  addWatchedFilmToLocaleStorage(response);\n}\n\nfunction renderMovie(response) {\n  const markup = `\n   <img class=\"modal-conteiner-img\" src=\"https://image.tmdb.org/t/p/w500${\n     response.poster_path\n   }\" alt=\"card\">\n  <div class='card-container'>\n          <h2 class='card-title'>${response.original_title}</h2>\n          <ul class='card-list'>\n            <li class='card-item'>\n              Vote / Votes\n              <p class='card-item-vote'>\n                <span class='card-item-average'>${response.vote_average}</span>/\n                <span class='card-item-count'>${response.vote_count}</span>\n              </p>\n            </li>\n            <li class='card-item'>\n              Popularity\n              <span class='card-item-popularity'>${response.popularity}</span>\n            </li>\n            <li class='card-item'>\n              Original Title\n              <span class='card-item-original-title'>${\n                response.original_title\n              }</span>\n            </li>\n            <li class='card-item'>\n              Genre\n              <p class='card-item-genres'>${response.genres\n                .map(genre => genre.name).slice(0, 3).join(', ')}\n                <span class='card-item-genre'></span>\n              </p>\n            </li>\n          </ul>\n          <p class='card-description'>About</p>\n          <p class='card-text'>${response.overview}</p>\n          <div class='card-list-btn'>\n            <button type='button' class='card-btn-watched' data-movieId=${response.id}>add to <br /> Watched</button>\n            <button type='button' class='card-btn-que' data-movieId=${response.id}>add to queue</button>\n          </div>\n        </div>\n      </div>\n  `;\n  return markup;\n}\n\nfunction openModal() {\n  //  modalContainer.classList.add('is-open');\n  backdrop.classList.add('is-open');\n  backdrop.classList.remove('is-hidden');\n  // document.overflow = 'hidden';\n}\n\nexport function onCloseModal() {\n  // modalContainer.classList.remove('is-open');\n  backdrop.classList.remove('is-open');\n  backdrop.classList.add('is-hidden');\n}\n\n\n// добавляє фільм при кліку в LocalStrage\n\n\nconst buttonLabelWatchedAdd = 'add to Watched';\nconst buttonLabelWatchedRemove = 'remove from Watched';\nconst buttonLabelQueuedAdd = 'add to Queue';\nconst buttonLabelQueueRemove = 'remove from Queue';\n\n\n\nfunction onLocalStorageWatched(event) {\n  const watchedButton = event.target;\n  const movieId = event.target.dataset.movieid;\n  console.log(movieId);\n  \n  const watchedMovies = localStorage.getItem('watchedMovies');\n  const watchedMoviesArray = JSON.parse(watchedMovies) || [];\n  console.log(watchedMoviesArray);\n  if (watchedMoviesArray.includes(movieId)) {\n    watchedMoviesArray.splice(watchedMoviesArray.indexOf(movieId), 1);\n    watchedButton.innerText = buttonLabelWatchedAdd;\n\n  } else {\n    watchedMoviesArray.push(movieId);\n    watchedButton.innerText = buttonLabelWatchedRemove;\n  }\n  localStorage.setItem('watchedMovies', JSON.stringify(watchedMoviesArray));\n  console.log(watchedMoviesArray);\n}\n\n\nfunction onLocalStorageQue(event) {\n  const queuedButton = event.target;\n  const movieId = event.target.dataset.movieid;\n  const queuedMovies = localStorage.getItem('queuedMovies');\n  const queuedMoviesArray = JSON.parse(queuedMovies) || [];\n  // console.log(queuedMoviesArray);\n  if (queuedMoviesArray.includes(movieId)) {\n    queuedMoviesArray.splice(queuedMoviesArray.indexOf(movieId), 1);\n    queuedButton.innerText = buttonLabelQueuedAdd;\n  } else {\n    queuedMoviesArray.push(movieId);\n    queuedButton.innerText = buttonLabelQueueRemove;\n  }\n  localStorage.setItem('queuedMovies', JSON.stringify(queuedMoviesArray));\n  console.log(queuedMoviesArray);\n}\n\n\n\n\n\n\n\n","let watchedFilms = [];\n\nexport default function addWatchedFilmToLocaleStorage(filmData) {\n\n    const btnWatched = document.querySelector('.card-btn-watched');\n\n    btnWatched.addEventListener('click', onBtnWatchedClick);\n\nfunction onBtnWatchedClick(e) {\n    try {\n        watchedFilms = [...JSON.parse(localStorage.getItem('watched'))];\n    } catch (error) {\n        watchedFilms = [];\n    }\n\n    for (const film of watchedFilms) {\n        if (filmData.id === film.id) {\n            const filteredFilm = watchedFilms.filter(film => film.id !== filmData.id);\n            watchedFilms = [...filteredFilm];\n            localStorage.setItem('watched', JSON.stringify(watchedFilms));\n            return;\n        }\n    }\n    watchedFilms.push(filmData);\n    localStorage.setItem('watched', JSON.stringify(watchedFilms));\n}\n}"],"names":["$7me8F","parcelRequire","$8a7e756c566dd1ea$var$newsApiServise","default","$8a7e756c566dd1ea$var$moviesContainer","document","querySelector","$8a7e756c566dd1ea$var$modalContainer","console","log","$8a7e756c566dd1ea$export$48e901322468f6d5","$8a7e756c566dd1ea$var$closeBtn","$8a7e756c566dd1ea$export$9dc820945641dd09","classList","remove","add","addEventListener","async","event","movieId","target","closest","dataset","movieid","response","getMovieInfo","innerHTML","poster_path","original_title","vote_average","vote_count","popularity","genres","map","genre","name","slice","join","overview","id","$8a7e756c566dd1ea$var$renderMovie","$8a7e756c566dd1ea$var$onLocalStorageWatched","$8a7e756c566dd1ea$var$onLocalStorageQue","$b5rV1","watchedButton","watchedMovies","localStorage","getItem","watchedMoviesArray","JSON","parse","includes","splice","indexOf","innerText","push","setItem","stringify","queuedButton","queuedMovies","queuedMoviesArray","$8125d1701b78b442$var$watchedFilms","$8125d1701b78b442$export$2e2bcd8739ae039","filmData","e","error","film1","filteredFilm","filter","film"],"version":3,"file":"index.1f556cf3.js.map"}