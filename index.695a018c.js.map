{"mappings":"gwBAAA,IAAAA,EAAAC,EAAA,S,uCAGMC,EAAiB,IAAI,EAAAC,EAAAC,SAErBC,EAAkBC,SAASC,cAAc,gBACzCC,EAAiBF,SAASC,cAAc,oBAC9CE,QAAQC,IAAIL,GACL,IAAMM,EAAWL,SAASC,cAAc,mBACzCK,EAAWN,SAASC,cAAc,0B,SAOzBM,I,OAAAA,EAAfC,EAAAd,EAAA,CAAAc,EAAAC,GAAAC,MAAA,SAAAC,EAA4BC,G,IAEpBC,EACAC,EAEAC,E,yEAHAF,EAAYD,EAAMI,OAAOC,QAAQ,eACjCH,EAAUD,EAAUK,QAAQC,QAClChB,QAAQC,IAAIU,G,SACWlB,EAAewB,aAAaN,G,OAA7CC,EAAQM,EAAAC,KACdnB,QAAQC,IAAIW,GACZb,EAAeqB,UAAYC,EAAYT,GACvCU,IACgBzB,SAASC,cAAc,qBACjCyB,iBAAiB,QAASC,GACtB3B,SAASC,cAAc,iBAC/ByB,iBAAiB,QAASE,IAC5B,EAAAC,EAAA/B,SAA8BiB,G,6CAbLe,MAAAC,KAAAC,WAmB3B,SAASR,EAAYT,GA2CnB,MAzCe,6EAKkBkB,OAH9BlB,EAASmB,YACV,uFAO8CD,OALflB,EAASoB,eAAe,uMAMXF,OADElB,EAASqB,aAAa,4DAMrBH,OALHlB,EAASsB,WAAW,mKAUpDJ,OALmClB,EAASuB,WAAW,uJAU3BL,OAL5BlB,EAASoB,eACV,mIAWkBF,OAPWlB,EAASwB,OACpCC,KAAI,SAAAC,G,OAASA,EAAMC,QAAMC,MAAM,EAAG,GAAGC,KAAK,MAAM,qMAQSX,OAFzClB,EAAS8B,SAAS,yHAGmBZ,OADIlB,EAAS+B,GAAG,yGACJb,OAAZlB,EAAS+B,GAAG,8EA/DlF3C,QAAQC,IAAIE,GAGZP,EAAgB2B,iBAAiB,S,SAGLd,G,OAAbL,EAAYuB,MAAAC,KAAAC,cAF3B1B,EAASoB,iBAAiB,QAASqB,GAmEnC,IAAMC,EAAWhD,SAASC,cAAc,qBAGxC,SAASwB,IAEPpB,EAAS4C,UAAUC,IAAI,WACvB7C,EAAS4C,UAAUE,OAAO,aAIrB,SAASJ,IAEd1C,EAAS4C,UAAUE,OAAO,WAC1B9C,EAAS4C,UAAUC,IAAI,aAZzB/C,QAAQC,IAAI4C,GA0BZ,SAASrB,EAAsBf,GAC7B,IAAMwC,EAAgBxC,EAAMI,OACtBF,EAAUF,EAAMI,OAAOE,QAAQC,QACrChB,QAAQC,IAAIU,GAEZ,IAAMuC,EAAgBC,aAAaC,QAAQ,iBACrCC,EAAqBC,KAAKC,MAAML,IAAkB,GACxDlD,QAAQC,IAAIoD,GACRA,EAAmBG,SAAS7C,IAC9B0C,EAAmBI,OAAOJ,EAAmBK,QAAQ/C,GAAU,GAC/DsC,EAAcU,UAjBY,mBAmB1BN,EAAmBO,KAAKjD,GACxBsC,EAAcU,UAnBe,sBAoB7BV,EAAcH,UAAUe,QAAQ,mBAAoB,4BAItDV,aAAaW,QAAQ,gBAAiBR,KAAKS,UAAUV,IACrDrD,QAAQC,IAAIoD,GAId,SAAS5B,EAAkBhB,GACzB,IAAMuD,EAAevD,EAAMI,OACrBF,EAAUF,EAAMI,OAAOE,QAAQC,QAC/BiD,EAAed,aAAaC,QAAQ,gBACpCc,EAAoBZ,KAAKC,MAAMU,IAAiB,GAElDC,EAAkBV,SAAS7C,IAC7BuD,EAAkBT,OAAOS,EAAkBR,QAAQ/C,GAAU,GAC7DqD,EAAaL,UApCY,iBAsCzBO,EAAkBN,KAAKjD,GACvBqD,EAAaL,UAtCc,oBAuC3BQ,IAAIrB,UAAUe,QAAQ,eAAgB,wBAGxCV,aAAaW,QAAQ,eAAgBR,KAAKS,UAAUG,IACpDlE,QAAQC,IAAIiE,O","sources":["src/js/modal.js"],"sourcesContent":["import NewsApiServise from './/api-service';\n//import addWatchedFilmToLocaleStorage from './local-storage';\nimport addWatchedFilmToLocaleStorage from './index';\nconst newsApiServise = new NewsApiServise();\n\nconst moviesContainer = document.querySelector('.movies-home');\nconst modalContainer = document.querySelector('.modal-conteiner');\nconsole.log(moviesContainer);\nexport const backdrop = document.querySelector('.backdrop-movie');\nconst closeBtn = document.querySelector('.modal-close-btn.close');\nconsole.log(closeBtn);\n\n\nmoviesContainer.addEventListener('click', onMovieClick);\ncloseBtn.addEventListener('click', onCloseModal);\n\nasync function onMovieClick(event) {\n  // event.preventDefault()\n  const movieCard = event.target.closest('.movie-card');\n  const movieId = movieCard.dataset.movieid;\n  console.log(movieId);\n  const response = await newsApiServise.getMovieInfo(movieId);\n  console.log(response);\n  modalContainer.innerHTML = renderMovie(response);\n  openModal();\n  const watched = document.querySelector('.card-btn-watched');\nwatched.addEventListener('click', onLocalStorageWatched);\nconst que = document.querySelector('.card-btn-que');\nque.addEventListener('click', onLocalStorageQue);\n  addWatchedFilmToLocaleStorage(response);\n  \n}\n\n\n\nfunction renderMovie(response) {\n\n  const markup = `\n   <img class=\"modal-conteiner-img\" src=\"https://image.tmdb.org/t/p/w500${\n     response.poster_path\n   }\" alt=\"card\">\n  <div class='card-container'>\n          <h2 class='card-title'>${response.original_title}</h2>\n          <ul class='card-list'>\n            <li class='card-item'>\n              Vote / Votes\n              <p class='card-item-vote'>\n                <span class='card-item-average'>${response.vote_average}</span>/\n                <span class='card-item-count'>${response.vote_count}</span>\n              </p>\n            </li>\n            <li class='card-item'>\n              Popularity\n              <span class='card-item-popularity'>${response.popularity}</span>\n            </li>\n            <li class='card-item'>\n              Original Title\n              <span class='card-item-original-title'>${\n                response.original_title\n              }</span>\n            </li>\n            <li class='card-item'>\n              Genre\n              <p class='card-item-genres'>${response.genres\n                .map(genre => genre.name).slice(0, 3).join(', ')}\n                <span class='card-item-genre'></span>\n              </p>\n            </li>\n          </ul>\n          <p class='card-description'>About</p>\n          <p class='card-text'>${response.overview}</p>\n          <div class='card-list-btn'>\n            <button type='button' class='card-btn-watched' data-movieId=${response.id}>add to <br /> Watched</button>\n            <button type='button' class='card-btn-que' data-movieId=${response.id}>add to queue</button>\n          </div>\n        </div>\n      </div>\n  `;\n  return markup;\n}\n\nconst watchBtn = document.querySelector('.card-btn-watched');\nconsole.log(watchBtn)\n\nfunction openModal() {\n  //  modalContainer.classList.add('is-open');\n  backdrop.classList.add('is-open');\n  backdrop.classList.remove('is-hidden');\n  // document.overflow = 'hidden';\n}\n\nexport function onCloseModal() {\n  // modalContainer.classList.remove('is-open');\n  backdrop.classList.remove('is-open');\n  backdrop.classList.add('is-hidden');\n}\n\n\n// добавляє фільм при кліку в LocalStrage\n\n\nconst buttonLabelWatchedAdd = 'add to Watched';\nconst buttonLabelWatchedRemove = 'remove from Watched';\nconst buttonLabelQueuedAdd = 'add to Queue';\nconst buttonLabelQueueRemove = 'remove from Queue';\n\n\n\nfunction onLocalStorageWatched(event) {\n  const watchedButton = event.target;\n  const movieId = event.target.dataset.movieid;\n  console.log(movieId);\n  \n  const watchedMovies = localStorage.getItem('watchedMovies');\n  const watchedMoviesArray = JSON.parse(watchedMovies) || [];\n  console.log(watchedMoviesArray);\n  if (watchedMoviesArray.includes(movieId)) {\n    watchedMoviesArray.splice(watchedMoviesArray.indexOf(movieId), 1);\n    watchedButton.innerText = buttonLabelWatchedAdd;\n  } else {\n    watchedMoviesArray.push(movieId);\n    watchedButton.innerText = buttonLabelWatchedRemove;\n    watchedButton.classList.replace('card-btn-watched', 'card-btn-remove-watched')\n\n\n  }\n  localStorage.setItem('watchedMovies', JSON.stringify(watchedMoviesArray));\n  console.log(watchedMoviesArray);\n}\n\n\nfunction onLocalStorageQue(event) {\n  const queuedButton = event.target;\n  const movieId = event.target.dataset.movieid;\n  const queuedMovies = localStorage.getItem('queuedMovies');\n  const queuedMoviesArray = JSON.parse(queuedMovies) || [];\n  // console.log(queuedMoviesArray);\n  if (queuedMoviesArray.includes(movieId)) {\n    queuedMoviesArray.splice(queuedMoviesArray.indexOf(movieId), 1);\n    queuedButton.innerText = buttonLabelQueuedAdd;\n  } else {\n    queuedMoviesArray.push(movieId);\n    queuedButton.innerText = buttonLabelQueueRemove;\n    que.classList.replace('card-btn-que', 'card-btn-remove-que')\n\n  }\n  localStorage.setItem('queuedMovies', JSON.stringify(queuedMoviesArray));\n  console.log(queuedMoviesArray);\n}\n\n\n\n\n\n\n\n"],"names":["$bpxeT","parcelRequire","$40873ecf3c18e122$var$newsApiServise","$1h2Gi","default","$40873ecf3c18e122$var$moviesContainer","document","querySelector","$40873ecf3c18e122$var$modalContainer","console","log","$40873ecf3c18e122$export$48e901322468f6d5","$40873ecf3c18e122$var$closeBtn","$40873ecf3c18e122$var$_onMovieClick","$parcel$interopDefault","$2TvXO","mark","_callee","event","movieCard","movieId","response","target","closest","dataset","movieid","getMovieInfo","_ctx","sent","innerHTML","$40873ecf3c18e122$var$renderMovie","$40873ecf3c18e122$var$openModal","addEventListener","$40873ecf3c18e122$var$onLocalStorageWatched","$40873ecf3c18e122$var$onLocalStorageQue","$5TAx9","apply","this","arguments","concat","poster_path","original_title","vote_average","vote_count","popularity","genres","map","genre","name","slice","join","overview","id","$40873ecf3c18e122$export$9dc820945641dd09","$40873ecf3c18e122$var$watchBtn","classList","add","remove","watchedButton","watchedMovies","localStorage","getItem","watchedMoviesArray","JSON","parse","includes","splice","indexOf","innerText","push","replace","setItem","stringify","queuedButton","queuedMovies","queuedMoviesArray","que"],"version":3,"file":"index.695a018c.js.map"}