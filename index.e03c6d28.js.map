{"mappings":"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","sources":["src/js/index.js"],"sourcesContent":["\n// import NewsApiServise from './api-service';\n// export let moviesArray = [];\n const root = document.querySelector(\"#root\");\nconsole.log(root);\nconst rootQueue = document.querySelector(\"#root-queue\"); \n\n\n\nlet watchedFilms = [];\nlet queFilms = [];\n\nconsole.log(watchedFilms);\nconsole.log(queFilms)\n\n\nfunction onBtnWatchedShow() {\n    //onWatchedBtnClick()\n    if (root.classList.contains('root-height') && rootQueue.classList.contains('root-show')) {\n        root.classList.remove('root-height');\n        root.classList.add('root-show');\n        rootQueue.classList.remove('root-show');\n        rootQueue.classList.add('root-height')\n        \n    }\n    // root.classList.add('root-show');\n\n    // rootQueue.classList.remove('root-height')\n}\n\nfunction onBtnShowQueue() {\n    //onQueueBtnClick()\n    if (root.classList.contains('root-show') &&rootQueue.classList.contains('root-height')) {\n        root.classList.remove('root-show');\n        root.classList.add('root-height');\n        rootQueue.classList.remove('root-height');\n        rootQueue.classList.add('root-show')\n        \n    }\n    // rootQueue.classList.toggle('root-show');\n    // root.classList.toggle('root-height')\n}\n\n\n\nexport default function addWatchedFilmToLocaleStorage(filmData) {\n\n    const btnWatched = document.querySelector('.card-btn-watched');\n   \n    const btnQueue = document.querySelector('.card-btn-que');\n    btnQueue.addEventListener('click', onBtnQue);\n    //const btnRemoweWatch = document.querySelector('.')\n    btnWatched.addEventListener('click', onBtnWatchedClick);\n console.log(btnQueue)\n\nfunction onBtnWatchedClick(e) {\n    try {\n        watchedFilms = [...JSON.parse(localStorage.getItem('watched'))];\n    } catch (error) {\n        watchedFilms = [];\n    }\n\n    for (const film of watchedFilms) {\n        console.log(filmData.id);\n        console.log(film.id)\n        if (filmData.id === film.id) {\n            const filteredFilm = watchedFilms.filter(film => film.id !== filmData.id);\n            watchedFilms = [...filteredFilm];\n            console.log(watchedFilms)\n            localStorage.setItem('watched', JSON.stringify(watchedFilms));\n            return;\n        }\n    }\n    watchedFilms.push(filmData);\n    localStorage.setItem('watched', JSON.stringify(watchedFilms));\n    }\n    \n    function onBtnQue(e) {\n       try {\n        queFilms = [...JSON.parse(localStorage.getItem('queue'))];\n    } catch (error) {\n        queFilms = [];\n        }\n        for (const film of queFilms) {\n        console.log(filmData.id);\n        console.log(film.id)\n        if (filmData.id === film.id) {\n            const filteredFilm = queFilms.filter(film => film.id !== filmData.id);\n            queFilms = [...filteredFilm];\n            localStorage.setItem('queue', JSON.stringify(queFilms));\n            return;\n        }\n        }\n         queFilms.push(filmData);\n    localStorage.setItem('queue', JSON.stringify( queFilms));\n}\n\n\n\n}\n\n// function onBtnRemoveWatch(e) {\n//        try {\n//         watchedFilms = [...JSON.parse(localStorage.getItem('watched'))];\n//     } catch (error) {\n//         watchedFilms = [];\n//     }\n// }\n\n//console.log(localStorage.getItem('watched'))\nconsole.log(JSON.parse(localStorage.getItem(\"watched\")))\nconsole.log(JSON.parse(localStorage.getItem(\"queue\")))\n\nfunction renderMovies() {\n    const movies =JSON.parse( localStorage.getItem(\"watched\"));\n  console.log(movies)\n    const listMurkup = movies.map(movie => {\n        console.log(movie)\n        const liEl = `<div class=\"movie-card\" data-movieId=${movie.id}>\n                 <img class=\"movie-img\" src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\" alt=\"card\">\n            \n                 <div class=\"movie-info\">\n                     <h2 class=\"movie-title\">${movie.original_title}</h2>\n                    <h3 class=\"span-title\">${movie.genres\n                .map(genre => genre.name).slice(0, 3).join(', ')} | ${movie.release_date.slice(\n    0,\n    4,\n  )}</h3>\n                     </div>\n                 </div>` ;\n        return liEl;\n    }).join('');\n    console.log(root)\n   root.insertAdjacentHTML('beforeend', listMurkup)\n \n}\nrenderMovies();\nrenderMoviesQueue()\nfunction renderMoviesQueue() {\n    const moviesQueue =JSON.parse( localStorage.getItem(\"queue\"));\n  console.log(moviesQueue)\n    const listMurkup = moviesQueue.map(movie => {\n        console.log(movie)\n        const liEl = `<div class=\"movie-card\" data-movieId=${movie.id}>\n                 <img class=\"movie-img\" src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\" alt=\"card\">\n            \n                 <div class=\"movie-info\">\n                     <h2 class=\"movie-title\">${movie.original_title}</h2>\n                    <h3 class=\"span-title\">${movie.genres\n                .map(genre => genre.name).slice(0, 3).join(', ')} | ${movie.release_date.slice(\n    0,\n    4,\n  )}</h3>\n                     </div>\n                 </div>` ;\n        return liEl;\n    }).join('');\n    console.log(root)\n   rootQueue.insertAdjacentHTML('beforeend', listMurkup)\n \n}\n\n// export default function writeLocalStor() {\n//     const newsApiServise = new NewsApiServise();\n//     const response = newsApiServise.getTrendMovies().then(response => {\n//         console.log(response.results)\n//         response.results.forEach(el => {\n//             //console.log(el);\n//             moviesArray.push({\n//                 id: `${el.id}`,\n//                 poster_path: `${el.poster_path}`,\n//                 original_title: `${el.original_title}`,\n//                 vote_average: `${el.vote_average}`,\n//                 vote_count: `${el.vote_count}`,\n//                 popularity: `${el.popularity}`,\n//                 genre_ids: `${el.genre_ids}`,\n//                 overview: `${el.overview}`,\n//                 release_date: `${el.release_date}`\n//             })\n// //console.log(response)\n//         })\n//         localStorage.setItem(\"moviess\", JSON.stringify(moviesArray));\n   \n//     });\n//     //console.log(response.results)\n//     //console.log(moviesArray)\n// }\n// writeLocalStor()\n\n\n\n// localStorage.setItem(\"moviess\", JSON.stringify(moviesArray));\n\n//console.log(JSON.parse( localStorage.getItem(\"moviess\")))\n//==============================================\n// const root = document.querySelector(\"#root\");\n\n\n// function renderMovies() {\n//     const movies =JSON.parse( localStorage.getItem(\"moviess\"));\n//   //console.log(movies)\n//     const listMurkup = movies.map(movie => {\n//         //console.log(movie)\n//         const liEl = `<div class=\"movie-card\" data-movieId=${movie.id}>\n//                  <img class=\"movie-img\" src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\" alt=\"card\">\n            \n//                  <div class=\"movie-info\">\n//                      <h2 class=\"movie-title\">${movie.original_title}</h2>\n//                     <h3 class=\"span-title\">${movie.genre_ids} | ${movie.release_date}</h3>\n//                      </div>\n//                  </div>` ;\n//         return liEl;\n//     }).join('');\n//    //root.insertAdjacentHTML('beforeend', listMurkup)\n \n// }\n// renderMovies();\n// //renderMovie();\n// const watchBtn = document.querySelector('.card-btn-watched');\n// console.log(watchBtn)\n//=================================================\n// async function onMovieClick(event) {\n//   // event.preventDefault()\n//   const movieCard = event.target.closest('.movie-card');\n//   const movieId = movieCard.dataset.movieid;\n//   console.log(movieId);\n//   const response = await newsApiServise.getMovieInfo(movieId);\n//   console.log(response);\n//   modalContainer.innerHTML = renderMovie(response);\n//   openModal();\n//   addWatchedFilmToLocaleStorage(response);\n// }\n\nconst watched = document.querySelector('.lib-watched-btn');\nwatched.addEventListener('click', onBtnWatchedShow)\nconst queue = document.querySelector('.lib-queue-btn');\nqueue.addEventListener('click', onBtnShowQueue)"],"names":["$85a5f86b715fe7db$var$root","document","querySelector","console","log","$85a5f86b715fe7db$var$rootQueue","$85a5f86b715fe7db$var$watchedFilms","$85a5f86b715fe7db$var$queFilms","$85a5f86b715fe7db$export$2e2bcd8739ae039","filmData","btnWatched","btnQueue","addEventListener","e","JSON","parse","localStorage","getItem","error","film2","id","filteredFilm","filter","film","setItem","stringify","push","film1","movies","listMurkup","map","movie","poster_path","original_title","genres","genre","name","slice","join","release_date","insertAdjacentHTML","$85a5f86b715fe7db$var$renderMovies","moviesQueue","$85a5f86b715fe7db$var$renderMoviesQueue","classList","contains","remove","add"],"version":3,"file":"index.e03c6d28.js.map"}